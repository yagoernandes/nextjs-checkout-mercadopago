// pages/payment.tsx
import Head from 'next/head'
import mercadopago from 'mercadopago'
import useMercadoPago from '../lib/MercadoPago'
import { useEffect } from 'react'
import { useRouter } from "next/router";
import { setCookie } from "../utils/cookie";
import { isNullishCoalesce } from 'typescript';


export default function payment(props: any) {

  const router = useRouter();

  const mercadopago = useMercadoPago(process.env.NEXT_PUBLIC_MERCADO_PAGO_PUBLIC_KEY || '', {
    locale: 'pt-BR'
  });

  useEffect(() => {
    const paymentState = localStorage.getItem('paymentStatus');
    if (paymentState === 'paid') {
      setCookie('paymentState', 'paid', null); // Set cookie for 30 days
      router.push('/post');
    }
  }, []);
  ;


  useEffect(() => {
    if (mercadopago) {
      mercadopago.checkout({
        preference: {
          id: props.preference_id
        },
        render: {
          container: '.checkout-container',
          label: 'Pagar',
        },
        theme: {
          headerColor: '#c0392b',
          elementsColor: '#c0392b'
        },
        callback: function (response) {
          if (response.status === 'approved') {
            localStorage.setItem('paymentStatus', 'paid'); // Save payment status to localStorage
            window.location.href = '/post';
          }
        }

        // how to retrieve local storage
        // if (localStorage.getItem('paymentStatus') === 'paid') {
        //   // Payment has been made
        // } else {
        //   // Payment has not been made
        // }

      })
    }
    return () => {
      const buttonContainer = document.querySelector('.checkout-container')
      const button = buttonContainer?.lastElementChild

      if (buttonContainer && button) {
        buttonContainer.removeChild(button)
      }
    }
  }, [mercadopago])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/*  */}
      <main className='flex items-center justify-center h-screen flex-col mx-auto'>
        <code>Desbloquea el contenido y miralo cuando quieras</code>
        <div className="checkout-container" />
      </main>
    </>
  )
}

export async function getServerSideProps(context: any) {
  // Adicione as credenciais
  mercadopago.configure({
    access_token: process.env.MERCADO_PAGO_ACCESS_TOKEN || '',

  });

  // Cria um objeto de preferência
  let preference = {
    items: [
      {
        id: '1234',
        title: 'Curso individual',
        description: '1 pago único del contenido elegido. Sin fecha de vencimiento',
        category_id: 'home',
        quantity: 1,
        currency_id: 'ARS',
        unit_price: 2000
      }
    ],
    payer: {
      name: "TEST_USER_337141211",
      email: "test_user_337141211@testuser.com",
      date_created: "10/04/23",

    },
    back_urls: {
      success: "http://localhost:3000/post",
      failure: "http://localhost:3000/failure",
      pending: "http://localhost:3000/"
    },
    auto_return: "approved",
  };

  const response = await mercadopago.preferences.create(preference)
  const preference_id = response.body.id
  return {
    props: {
      asd: 123,
      preference_id: preference_id
    },
  }
}